version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: actnexus_postgres
    environment:
      POSTGRES_DB: actnexus
      POSTGRES_USER: actnexus_user
      POSTGRES_PASSWORD: actnexus_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - actnexus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U actnexus_user -d actnexus"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: actnexus_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - actnexus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis Cache (Opcional)
  redis:
    image: redis:7-alpine
    container_name: actnexus_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - actnexus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes

  # LangFlow (Opcional - para desenvolvimento)
  langflow:
    image: langflowai/langflow:latest
    container_name: actnexus_langflow
    ports:
      - "7860:7860"
    environment:
      - LANGFLOW_HOST=0.0.0.0
      - LANGFLOW_PORT=7860
      - LANGFLOW_WORKERS=1
    volumes:
      - langflow_data:/app/langflow
      - ./langflow_exports:/app/exports
    networks:
      - actnexus_network
    restart: unless-stopped
    depends_on:
      - postgres

  # ActNexus Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: actnexus_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://actnexus_user:actnexus_password@postgres:5432/actnexus
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
      - LANGFLOW_HOST=http://langflow:7860
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - LOG_LEVEL=INFO
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - actnexus_network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Opcional)
  nginx:
    image: nginx:alpine
    container_name: actnexus_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - actnexus_network
    restart: unless-stopped
    depends_on:
      - backend
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  langflow_data:
    driver: local

networks:
  actnexus_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16